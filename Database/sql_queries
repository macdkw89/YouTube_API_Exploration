CREATE TABLE channel_data(
	channel_id varchar NOT NULL,
	custom_url varchar,
	topic_category varchar,
	channel_view_count bigint,
	subscriber_count bigint,
	channel_video_count bigint,
	PRIMARY KEY (channel_id)
);

CREATE TABLE video_data(
	channel_id varchar NOT NULL,
	video_id varchar NOT NULL,
	video_title_clean varchar,
	published_at timestamp,
	video_length varchar,
	comment_count bigint,
	like_count bigint,
	view_count bigint,
FOREIGN KEY (channel_id) REFERENCES channel_data (channel_id)
);

INSERT INTO channel_data
VALUES ('UC0VOyT2OCBKdQhF3BAbZ-1g','@arianagrandevevo','Music',19286274611,110400000,250);
INSERT INTO channel_data
VALUES ('UCANLZYMidaCbLQFWXBC95Jg','@taylorswiftvevo','Music',23828831944,128100000,408);
INSERT INTO channel_data
VALUES ('UCDGmojLIoWpXok597xYo8cg','@billieeilishvevo','Music',9073913673,14500000,108);
INSERT INTO channel_data
VALUES ('UC-8Q-hLdECwQmaWNwXitYDw','@katyperryvevo','Music',22950321417,22000000,262);
INSERT INTO channel_data
VALUES ('UCbW18JZRgko_mOGm5er8Yzg','@onedirectionvevo','Music',11699760120,97000000,255);
INSERT INTO channel_data
VALUES ('UClCzrgLk0nayFypiWI7NJ4w','@brunomarsvevo','Music',11610066,540000,2);
INSERT INTO channel_data
VALUES ('UCPW4ObAtDezrOGo2gjYOctg','@marshmellovevo','Music',197180486,7820000,13);
INSERT INTO channel_data
VALUES ('UCHkj014U2CQ2Nv0UZeYpE_A','@justinbiebervevo','Music',25655480105,31700000,197);



DROP TABLE channel_data CASCADE;
DROP TABLE video_data;
DROP TABLE sentiment_video_data CASCADE;
DROP TABLE joined_data;

--- join tables together
SELECT c.channel_id,
	c.custom_url,
	c.topic_category,
	c.channel_view_count,
	c.subscriber_count,
	c.channel_video_count,
	v.video_id,
	v.published_at,
	v.video_length,
	v.like_count,
	v.comment_count,
	v.view_count
INTO joined_data
FROM channel_data AS c
INNER JOIN video_data AS v
ON c.channel_id=v.channel_id;

SELECT * FROM joined_data;

--create tables of final databases
CREATE TABLE clean_joined_data (
	channel_id VARCHAR,
	custom_url VARCHAR,
	topic_category VARCHAR,
	channel_view_count BIGINT,
	subscriber_count BIGINT,
	channel_video_count BIGINT,
	video_id VARCHAR,
	published_at TIMESTAMP,
	video_length VARCHAR,
	like_count BIGINT,
	comment_count BIGINT,
	view_count BIGINT
);

CREATE TABLE clean_binned_data (
	channel_id VARCHAR,
	custom_url VARCHAR,
	topic_category VARCHAR,
	channel_view_count BIGINT,
	subscriber_count BIGINT,
	channel_video_count BIGINT,
	video_id VARCHAR,
	published_at TIMESTAMP,
	video_length VARCHAR,
	like_count BIGINT,
	comment_count BIGINT,
	view_count BIGINT,
	channel_views_binned VARCHAR,
	subscribers_binned VARCHAR,
	video_count_binned VARCHAR,
	day_of_week_published VARCHAR,
	like_count_binned VARCHAR,
	comment_binned VARCHAR,
	video_views_binned VARCHAR
);

CREATE TABLE final_df (
	channel_id VARCHAR,
	custom_url VARCHAR,
	topic_category VARCHAR,
	channel_view_count BIGINT,
	subscriber_count BIGINT,
	channel_video_count BIGINT,
	video_id VARCHAR,
	video_length VARCHAR,
	like_count BIGINT,
	comment_count BIGINT,
	view_count BIGINT,
	day_of_week_published VARCHAR,
	date_published DATE,
	time_published TIME
);

CREATE TABLE video_length(
	video_id VARCHAR,
	video_length_seconds FLOAT
);
DROP TABLE video_length_seconds;

CREATE TABLE video_length_seconds(
	video_id VARCHAR,
	video_length INT,
	video_length_seconds FLOAT
);
--- join video length to final df and binned df
SELECT f.channel_id,
	f.custom_url,
	f.topic_category,
	f.channel_view_count,
	f.subscriber_count,
	f.channel_video_count,
	f.video_id,
	f.like_count,
	f.comment_count,
	f.view_count,
	f.day_of_week_published,
	f.time_published,
	v.video_length_seconds
INTO ml_table
FROM final_df AS f
INNER JOIN video_length AS v
ON f.video_id=v.video_id;

SELECT * FROM ml_table;

SELECT b.channel_id,
	b.custom_url,
	b.topic_category,
	b.channel_view_count,
	b.subscriber_count,
	b.channel_video_count,
	b.video_id,
	b.published_at,
	b.video_length,
	b.like_count,
	b.comment_count,
	b.view_count,
	b.channel_views_binned,
	b.subscribers_binned,
	b.video_count_binned,
	b.day_of_week_published,
	b.like_count_binned,
	b.comment_binned,
	b.video_views_binned,
	v.video_length_seconds
INTO new_binned_df
FROM clean_binned_data as b
INNER JOIN video_length as v
ON b.video_id=v.video_id;

DROP TABLE new_binned_df;
SELECT * FROM new_binned_df;